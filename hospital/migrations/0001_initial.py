# Generated by Django 2.0.4 on 2018-06-11 12:39

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import djongo.models.fields
import hospital.models
import jsonfield.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Added')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Added')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('values', djongo.models.fields.ArrayModelField(model_container=hospital.models.ParameterValue, verbose_name='Values')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Doctor')),
            ],
            options={
                'verbose_name': 'Application',
                'verbose_name_plural': 'Applications',
                'permissions': (('manage_application', 'Can manage applications'), ('supervise_application', 'Can supervise applications per project')),
            },
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Added')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('code', models.CharField(max_length=10, verbose_name='Code')),
            ],
            options={
                'verbose_name': 'Form',
                'verbose_name_plural': 'Forms',
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Added')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('field_type', models.IntegerField(choices=[(1, 'Integer'), (3, 'String'), (2, 'Decimal'), (4, 'Multistring'), (5, 'Boolean'), (6, 'Date'), (7, 'Datetime'), (8, 'Select'), (9, 'Select Multiple')], verbose_name='Type')),
                ('extra_params', jsonfield.fields.JSONField(default=dict, verbose_name='Extra Parameters')),
            ],
            options={
                'verbose_name': 'Parameter',
                'verbose_name_plural': 'Parameters',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Added')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('full_name', models.CharField(max_length=100, verbose_name='Full Name')),
                ('birthday', models.DateField(verbose_name='Birthday')),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Added')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('code', models.CharField(max_length=10, verbose_name='Code')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Added')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('subject', models.CharField(max_length=100, verbose_name='Subject')),
                ('district', models.CharField(max_length=100, verbose_name='District')),
                ('projects', models.ManyToManyField(to='hospital.Project', verbose_name='Projects')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
            },
        ),
        migrations.AddField(
            model_name='form',
            name='fields',
            field=models.ManyToManyField(related_name='parameter', to='hospital.Parameter', verbose_name='Fields'),
        ),
        migrations.AddField(
            model_name='form',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Project', verbose_name='Project'),
        ),
        migrations.AddField(
            model_name='application',
            name='form',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Form', verbose_name='Form'),
        ),
        migrations.AddField(
            model_name='application',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Application', verbose_name='Parent'),
        ),
        migrations.AddField(
            model_name='application',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital.Patient', verbose_name='Patient'),
        ),
    ]
